#! /usr/bin/env sh

export LC_ALL
LC_ALL=C

Die () {
	printf '%s: %s\n' "${0##*/}" "${1}" >&2
	exit ${2:-1}
}

[ "`id -u`" -eq 0 ] || Die "only root may execute this script"
curr='.'

distdir="`portageq distdir`"
[ -n "${distdir}" ] && test -d "${distdir}" || Die "cannot determine DISTDIR"

GetEdir () {
	for overlay in `portageq portdir_overlay`
	do	edir="${i}/app-portage/eix"
		for jebuild in "${edir}"/eix-*.ebuild
		do	case "${jebuild##*/}" in
				eix-9999*) continue;;
			esac
			test -f "${jebuild}" || continue
			test -r "${overlay}/profiles/repo_name" && \
			repo_name=`cat -- "${overlay}"/profiles/repo_name` || \
			repo_name=''
			return 0
		done
	done
	return 1
}
GetEdir || Die "cannot find app-portage/eix in overlay"

MoveEbuild () {
	test -f "${1}" && return
	latest=''
	for find_latest in "${edir}"/eix-*.ebuild
	do	case "${find_latest##*/}" in
			eix-9999*) continue;;
		esac
		test -f "${find_latest}" && latest="${find_latest}"
	done
	printf '%s\n' "Moving ${latest} -> ${1##*/}"
	mv -- "${latest}" "${1}" || Die "cannot mv ${latest} ${1}"
}

RmOpt () {
	! test -f "${1}" || rm -- "${1}"
}

InstallEbuildVersion () {
	chown portage:portage -- "${1}"
	chmod 664 -- "${1}"
	printf '%s\n' "Moving ${1} -> ${distdir}"
	mv -- "${1}" "${distdir}/${1##*/}"
	MoveEbuild "${edir}/eix-${2}.ebuild"
	(
		cd -- "${edir}" || Die "cannot change to ${edir}"
		RmOpt "Manifest" || Die "cannot remove Manifest"
		printf '%s\n' "ebuild ${edir}/eix-${2}.ebuild manifest"
		ebuild -- "eix-${2}.ebuild" manifest || Die "ebuild failed"
	) || exit
	if [ -n "${repo_name}" ] && command -v egencache >/dev/null 2>&1
	then	printf '%s\n' "egencache --repo=${repo_name} --update"
		egencache --repo="${repo_name}" --update || \
			Die "egencache failed"
	fi
	printf '%s\n' "emerge -1 =app-portage/eix-${2}"
	exec emerge -1 -- "=app-portage/eix-${2}"
	Die "cannot execute emerge"
}

DoFirst () {
	for j in tar.xz tar.lzma tar.bz2 tar.gz zip tar.Z shar.gz shar
	do	for i in "${curr}"/eix-*."${j}"
		do	test -e "${i}" || continue
			v="${i##*/eix-}"
			v=${v%".${j}"}
			InstallEbuildVersion "${i}" "${v}"
			return
		done
	done
	Die "No tarball found in ${curr}"
}

DoFirst || exit
