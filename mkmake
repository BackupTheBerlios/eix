#! /bin/bash

Usage() {
	echo "Usage: ./${0##*/} [options] args-for-make
Available options are
  -q  quiet
  -n  Stop after ./configure, i.e. do not run make
  -e  Keep environment - do not modify LDFLAGS, CXXFLAGS, CFLAGS
  -p  Use pedantic warnings (but no error on warnings) when modifying flags
  -u  Define NOT_FULL_USE
  -s  With sqlite
  -S  Without sqlite
  -b  With bzlib
  -B  Without bzlib
  -c  Use only debugging-safe CXXFLAGS"
	exit ${1}
}

die() {
	echo "${1}"
	exit ${2:-1}
}

QUIET=''
EARLYSTOP=''
KEEPENV=''
SAVEFLAGS=''
NOT_FULL_USE=''
SQLITE=''
BZLIB=''
PEDANTIC=''
while getopts 'qnepusSbBc?hH' OPTION; do
case "$OPTION" in
	q) QUIET='&>/dev/null';;
	n) EARLYSTOP=1;;
	e) KEEPENV=1;;
	p) PEDANTIC=1;;
	u) NOT_FULL_USE=1;;
	s) SQLITE='--with-sqlite';;
	S) SQLITE='--without-sqlite';;
	b) BZLIB='--with-bzip2';;
	B) BZLIB='--without-bzip2';;
	c) SAFEFLAGS=1;;
	*) Usage 1;;
esac
done
shift $((OPTIND-1))

if [ -z "${KEEPENV}" ]; then
	MARCH=$(sed -n 's/^CFLAGS *= *.*-march=\([^ \"]*\)[ \"].*/\1/p' \
		/etc/make.conf)
	export CXXFLAGS CFLAGS LDFLAGS
	LDFLAGS='-Wl,--sort-common -Wl,-O1 -Wl,-z,combreloc -Wl,--relax -Wl,-z,now'
	CFLAGS="-march=${MARCH} -O2 -pipe"
	[ -n "${SAFEFLAGS}" ] || CFLAGS="${CFLAGS} -fomit-frame-pointer -O3 -O4 -fno-ident -fPIC -ftracer -ftree-vectorize -ftree-vectorizer-verbose=0 -funswitch-loops -frename-registers -fweb -finline-functions -fgcse-after-reload -DNDEBUG -DG_DISABLE_ASSERT -DNO_DEBUG -D_FILE_OFFSET_BITS=64 -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE"
	[ -n "${NOT_FULL_USE}" ] && CFLAGS="${CFLAGS} -DNOT_FULL_USE"
	CFLAGS="${CFLAGS} -g -ggdb3 -Wall -Wextra"
	[ -n "${SAFEFLAGS}" ] || CFLAGS="${CFLAGS} -pedantic -Wno-variadic-macros"
	if [ -n "${PEDANTIC}" ]; then
		CFLAGS="${CFLAGS} -fstrict-aliasing -fstack-protector"
		CFLAGS="${CFLAGS} -Wformat=2 -Winit-self -Wmissing-include-dirs -Wswitch-default -Wunused -Wunused-parameter -Wstrict-aliasing=2"
		CFLAGS="${CFLAGS} -Wfloat-equal  -Wundef -Wshadow -Wunsafe-loop-optimizations -Wpointer-arith -Wcast-qual -Wcast-align -Wwrite-strings -Wconversion -Wsign-compare -Wmissing-field-initializers -Wmissing-noreturn -Wnormalized=nfkc -Wpacked -Wredundant-decls -Winvalid-pch -Wlong-long -Wvolatile-register-var -Wdisabled-optimization -Wstack-protector"
		#CFLAGS="${CFLAGS} -Wunreachable-code -Wpadded"
		#CFLAGS="${CFLAGS} -Wswitch-enum -Waggregate-return -Winline -Wmissing-format-attribute"
		CXXFLAGS="${CFLAGS} -Wabi -Wctor-dtor-privacy -Wstrict-null-sentinel -Wold-style-cast -Woverloaded-virtual -Wsign-promo"
		#CXXFLAGS="${CXXFLAGS} -Weffc++ "
		CFLAGS="${CFLAGS} -Wtraditional -Wc++-compat -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wnested-externs -Wpointer-sign"
		#CXXFLAGS="${CXXFLAGS} -Werror"
	else
		CXXFLAGS="${CFLAGS} -Werror"
	fi
	[ -n "${SAFEFLAGS}" ] || CXXFLAGS="${CXXFLAGS} -fvisibility-inlines-hidden -fno-enforce-eh-specs"
fi
[ -n "$QUIET" ] || echo "CFLAGS=$CFLAGS
CXXFLAGS=$CXXFLAGS
LDFLAGS=$LDFLAGS"
if ! [ -e Makefile ]; then
	if ! [ -e configure -a -e Makefile.in ]; then
		echo "Running autotools..."
		eval ./autogen.sh $QUIET || die "autogen failed"
	fi
	echo "Running configure..."
	eval ./configure $SQLITE $BZLIB $QUIET || die "configure failed"
fi
[ -n "$EARLYSTOP" ] && exec make config.h
echo "Making $@..."
MAKEEXEC="$(type -P make)" || die "cannot find make"
if [ -n "$QUIET" ]; then
	exec "$MAKEEXEC" "$@" &>/dev/null
else
	exec "$MAKEEXEC" "$@"
fi
