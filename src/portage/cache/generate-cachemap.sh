#!/bin/bash

function to_classname () {
	echo -n ${1:0:1} | tr 'a-z' 'A-Z'
	echo "${1:1}Cache"
}

cache_names="backport cdb flat none metadata eixcache"

cat<<END
// AUTOGENERATED BY MAKE .. DO NOT EDIT!
END

for cache_name in $cache_names; do
	cat<<END
#include "$cache_name/$cache_name.h"
END
done

cat<<END
using namespace std;

BasicCache *get_cache(string name) {
END

for cache_name in $cache_names; do
	cache_class=$(to_classname "$cache_name")

	[[ "$cache_name" != "eixcache" ]] && cat<<END
	if (name == "$cache_name") {
		return new $cache_class;
	}
END
done

cat<<END
	vector<string> splitted = split_string(name, ":", false);
	if (splitted[0] == "eix")
	{
		switch(splitted.size())
		{
			case 1: return new EixCache();
			case 2: return new EixCache(splitted[1]);
			case 3: return new EixCache(splitted[1], 1, atoi(splitted[2].c_str()));
		}
	}
	return NULL;
}
END
