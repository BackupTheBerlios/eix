#! /usr/bin/env sh
# This script is part of the eix project and distributed under the
# terms of the GNU General Public License v2.
#
# Author and Copyright (c):
#   Martin V\"ath <vaeth@mathematik.uni-wuerzburg.de>
#
# This script gives a structured output of eix -tTc (@PACKAGE_STRING@).

. ./eix-functions.sh.in
ReadGettext

details=true

Usage () {
	local n p
	n="${0##*/}"
	p='@PACKAGE_STRING@'
	eval_gettext 'Usage: ${n} [options] detail|brief|repo|no-repo
This is a wrapper script for eix (${p}).

It calls eix -tTc several times with various variable settings in order to
display missing packages or packages with obsolete entries in
/etc/portage/package.* in a more organized manner than eix -tTc would do alone.
The speed and displayed details depend on whether you use the argument
"detail" or "brief". Note that the result depends on your settings of the
REDUNDANT_IF_* and NONEXISTENT_IF_* variables.

The following options are available:
	-c  use CHECK_INSTALLED_OVERLAYS=true
	-C  use CHECK_INSTALLED_OVERLAYS=repository

If neither -c nor -C is used, then CHECK_INSTALLED_OVERLAYS is not modified.
The (recommended) default for CHECK_INSTALLED_OVERLAYS is \"repository\" which
is much faster then CHECK_INSTALLED_OVERLAYS=true but works only reliable for
packages installed with repository information (which is done by all recent
portage versions).

You can check which packages are installed with/without this repository
information by using the argument "repo"/"no-repo".

The argument can always be abbreviated, e.g. instead of "brief" you can just
use "b".'
	echo
	exit ${1:-1}
}

Die () {
	printf '%s: %s\n' "${0##*/}" "${1}" >&2
	exit ${2:-1}
}

Eix () {
	local i
	if [ -z "`eix '-*Tc' | head -n1`" ]
	then
		[ -z "${1}" ] || printf "%s\n" "${1}"
		return
	fi
	printf '\n%s\n' "${2}"
	if [ ${#} -le 2 ] || ! ${details}
	then
		eix -Tc
		printf '\n'
		return
	fi
	shift 2
	for i
	do
		(
			for j; do
				[ "${i}" = "${j}" ] && continue
				eval "export ${j}=false"
			done
			Eix '' "`eval_gettext '... considered as ${i}'`"
		)
	done
}

NoKeywords () {
	export \
	REDUNDANT_IF_DOUBLE=false \
	REDUNDANT_IF_MIXED=false \
	REDUNDANT_IF_WEAKER=false \
	REDUNDANT_IF_STRANGE=false \
	REDUNDANT_IF_NO_CHANGE=false \
	REDUNDANT_IF_DOUBLE_LINE=false \
	REDUNDANT_IF_MINUSASTERISK=false
}

NoMask () {
	export \
	REDUNDANT_IF_MASK_NO_CHANGE=false \
	REDUNDANT_IF_DOUBLE_MASKED=false
}

NoUnmask () {
	export \
	REDUNDANT_IF_UNMASK_NO_CHANGE=false \
	REDUNDANT_IF_DOUBLE_UNMASKED=false
}

NoUse () {
	export \
	REDUNDANT_IF_DOUBLE_USE=false
}

NoCflags () {
	export \
	REDUNDANT_IF_DOUBLE_CFLAGS=false
}

NoUninstalled () { export \
	REDUNDANT_IF_IN_KEYWORDS=false \
	REDUNDANT_IF_IN_MASK=false \
	REDUNDANT_IF_IN_UNMASK=false \
	REDUNDANT_IF_IN_USE=false \
	REDUNDANT_IF_IN_CFLAGS=false
}

Repository () {
	local i j c
	if ${1}
	then
		i="`gettext \
'The following package versions are installed with repository information:'`"
	else
		i="`gettext \
'The following package versions are installed without repository information:'`"
	fi
	cd -- "`eix --print EPREFIX_INSTALLED`"/var/db/pkg >/dev/null 2>&1 \
		|| Die "`gettext \
			'cannot locate your database of installed packages'`"
	printf "%s\n\n" "${i}"
	c=0
	for i in *
	do
		for j in "${i}"/*; do
			test -d "${j}" || continue
			if test -e "${j}/repository"; then
				${1} || continue
			else
				${1} && continue
			fi
			printf '%s\n' "${j}"
			c=`expr "${c}" + 1`
		done
	done
	if [ ${c} -eq 0 ]
	then
		gettext 'none'
		echo
	elif [ ${c} -ne 1 ]
	then
		echo
		eval_gettext '(total number of versions listed above: ${c})'
		echo
	fi
	exit 0
}

OPTIND=1
while getopts "cC?hH" opt
do
	case "${opt}" in
		c) export CHECK_INSTALLED_OVERLAYS=true;;
		C) export CHECK_INSTALLED_OVERLAYS=repository;;
		*) Usage 0;;
	esac
done
[ ${OPTIND} -gt 1 ] && shift "`expr ${OPTIND} - 1`"
[ ${#} -ne 1 ] && Usage
case "${1}" in
	b*|B*) details=false;;
	n*|N*) Repository false;;
	r*|R*) Repository true;;
	h*|H*) Usage 0;;
esac

eix '-t*!'

rump="`eix --print PORTAGE_CONFIGROOT`"
rump="${rump}/etc/portage/package."
(
	export TEST_FOR_NONEXISTENT=false
	(
		NoMask; NoUnmask; NoUse; NoCflags; NoUninstalled
		Eix "`eval_gettext \
'No redundant entries in ${rump}keywords (or test switched off).'`" \
			"`eval_gettext 'Redundant in ${rump}keywords:'`" \
			REDUNDANT_IF_DOUBLE \
			REDUNDANT_IF_MIXED \
			REDUNDANT_IF_WEAKER \
			REDUNDANT_IF_STRANGE \
			REDUNDANT_IF_NO_CHANGE \
			REDUNDANT_IF_DOUBLE_LINE \
			REDUNDANT_IF_MINUSASTERISK
	)
	NoKeywords
	(
		NoUnmask; NoUse; NoCflags; NoUninstalled
		Eix "`eval_gettext \
'No redundant entries in ${rump}mask (or test switched off).'`" \
			"`eval_gettext 'Redundant in ${rump}mask:'`" \
			REDUNDANT_IF_MASK_NO_CHANGE \
			REDUNDANT_IF_DOUBLE_MASKED
	)
	NoMask
	(
		NoUse; NoCflags; NoUninstalled
		Eix "`eval_gettext \
'No redundant entries in ${rump}unmask (or test switched off).'`" \
			"`eval_gettext 'Redundant in ${rump}unmask:'`" \
			REDUNDANT_IF_UNMASK_NO_CHANGE \
			REDUNDANT_IF_DOUBLE_UNMASKED
	)
	NoUnmask
	(
		NoCflags; NoUninstalled
		Eix "`eval_gettext \
'No redundant entries in ${rump}use (or test switched off).'`" \
			"`eval_gettext 'Redundant in ${rump}use:'`" \
	)
	NoUse
	(
		NoUninstalled
		Eix "`eval_gettext \
'No redundant entries in ${rump}cflags (or test switched off).'`" \
			"`eval_gettext 'Redundant in ${rump}cflags:'`" \
	)
	NoCflags
	(
		export \
		REDUNDANT_IF_IN_MASK=false \
		REDUNDANT_IF_IN_UNMASK=false \
		REDUNDANT_IF_IN_USE=false \
		REDUNDANT_IF_IN_CFLAGS=false
		Eix "`eval_gettext \
'No uninstalled entries in ${rump}keywords (or test switched off).'`" \
			"`eval_gettext 'Not installed but in ${rump}keywords:'`"
	)
	export REDUNDANT_IF_IN_KEYWORDS=false
	(
		export \
		REDUNDANT_IF_IN_UNMASK=false \
		REDUNDANT_IF_IN_USE=false \
		REDUNDANT_IF_IN_CFLAGS=false
		Eix "`eval_gettext \
'No uninstalled entries in ${rump}mask (or test switched off).'`" \
			"`eval_gettext 'Not installed but in ${rump}mask:'`"
	)
	export REDUNDANT_IF_IN_MASK=false
	(
		export \
		REDUNDANT_IF_IN_USE=false \
		REDUNDANT_IF_IN_CFLAGS=false
		Eix "`eval_gettext \
'No uninstalled entries in ${rump}unmask (or test switched off).'`" \
			"`eval_gettext 'Not installed but in ${rump}unmask:'`"
	)
	export REDUNDANT_IF_IN_UNMASK=false
	(
		export \
		REDUNDANT_IF_IN_CFLAGS=false
		Eix "`eval_gettext \
'No uninstalled entries in ${rump}use (or test switched off).'`" \
			"`eval_gettext 'Not installed but in ${rump}use:'`"
	)
	export \
	REDUNDANT_IF_IN_USE=false
	Eix "`eval_gettext \
'No uninstalled entries in ${rump}cflags (or test switched off).'`" \
		"`eval_gettext 'Not installed but in ${rump}cflags:'`"
)
export \
TEST_FOR_REDUNDANCY=false
Eix "`gettext \
	'All installed versions of packages are in the database.'`" \
	"`gettext \
	'Installed packages with a version not in the database (or masked):'`"
